AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31
Parameters:
  ProjectName:
    Type: String
    Description: CodeStar projectId used to associate new resources to team members
    Default: gates
  Stage:
    Type: String
    Description: The name for a project pipeline stage, such as Staging or Prod, for
      which resources are provisioned and deployed.
    Default: dev
Globals:
  Function:
    AutoPublishAlias: live
    DeploymentPreference:
      Enabled: true
      Type: Canary10Percent5Minutes
  Api:
    OpenApiVersion: 3.0.1
Resources:
  gatesApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: gates-dev
      StageName: api
      TracingEnabled: true
      DefinitionBody:
        openapi: 3.0.1
        info:
          title: gates-dev
          version: '2020-11-20T12:39:22Z'
        paths:
          /{version}/news/{date}:
            get:
              parameters:
              - name: version
                in: path
                required: true
                schema:
                  type: string
              responses:
                '200':
                  description: 200 response
                  headers:
                    Access-Control-Allow-Origin:
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/Empty'
              security:
              - api_key: []
              x-amazon-apigateway-integration:
                uri: arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:197052146621:function:gates-dev-get-news/invocations
                responses:
                  default:
                    statusCode: '200'
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: '''*'''
                passthroughBehavior: when_no_match
                httpMethod: POST
                contentHandling: CONVERT_TO_TEXT
                type: aws_proxy
            options:
              responses:
                '200':
                  description: 200 response
                  headers:
                    Access-Control-Allow-Origin:
                      schema:
                        type: string
                    Access-Control-Allow-Methods:
                      schema:
                        type: string
                    Access-Control-Allow-Headers:
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/Empty'
              security:
              - NONE: []
              x-amazon-apigateway-integration:
                responses:
                  default:
                    statusCode: '200'
                    responseParameters:
                      method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS,POST'''
                      method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
                      method.response.header.Access-Control-Allow-Origin: '''*'''
                requestTemplates:
                  application/json: '{"statusCode": 200}'
                passthroughBehavior: when_no_match
                type: mock
        components:
          schemas:
            Empty:
              title: Empty Schema
              type: object
          securitySchemes:
            api_key:
              type: apiKey
              name: x-api-key
              in: header
      MethodSettings:
      - DataTraceEnabled: true
        LoggingLevel: ERROR
        ResourcePath: /*
        HttpMethod: '*'
    Metadata:
      SamResourceId: gatesApi
  gatesApiKey:
    Type: AWS::ApiGateway::ApiKey
    DependsOn: gatesApiapiStage
    Properties:
      Name: gates-dev-api-key
      Enabled: true
      StageKeys:
      - RestApiId:
          Ref: gatesApi
        StageName: api
    Metadata:
      SamResourceId: gatesApiKey
  gatesApiUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    DependsOn: gatesApiapiStage
    Properties:
      ApiStages:
      - ApiId:
          Ref: gatesApi
        Stage:
          Ref: gatesApiapiStage
      Throttle:
        BurstLimit: 200
        RateLimit: 100
      UsagePlanName: gates-dev-usage-plan
    Metadata:
      SamResourceId: gatesApiUsagePlan
  gatesApiUsagePlanKey:
    Type: AWS::ApiGateway::UsagePlanKey
    DependsOn:
    - gatesApiKey
    - gatesApiUsagePlan
    Properties:
      KeyId:
        Ref: gatesApiKey
      KeyType: API_KEY
      UsagePlanId:
        Ref: gatesApiUsagePlan
    Metadata:
      SamResourceId: gatesApiUsagePlanKey
  GetNewsPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::Sub: ${ProjectName}-${Stage}-get-news
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub:
        - arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${apiId}/*/GET/*
        - apiId:
            Ref: gatesApi
    Metadata:
      SamResourceId: GetNewsPermission
Outputs:
  gatesApiId:
    Description: API Gateway endpoint ID
    Value:
      Ref: gatesApi
    Export:
      Name: gatesApiId
